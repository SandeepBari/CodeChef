/*
 Consider a currency system in which there are notes of six denominations, namely, Rs. 1, Rs. 2, Rs. 5, Rs. 10, Rs. 50, Rs. 100.
If the sum of Rs. N is input, write a program to computer smallest number of notes that will combine to give Rs. N.
Input

The first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer N.
Output

For each test case, display the smallest number of notes that will combine to give N, in a new line.
Constraints

    1 ≤ T ≤ 1000
    1 ≤ N ≤ 1000000

Example

Input
3 
1200
500
242

Output
12
5
7

All submissions for this problem are available.

Author: 1★vicky002

Tags: vicky002

Date Added: 27-04-2015

Time Limit: 1 secs

Source Limit: 50000 Bytes

Languages: CPP14, C, JAVA, PYTH 3.6, PYTH, CS2, ADA, PYPY, PYP3, TEXT, PAS fpc, RUBY, PHP, NODEJS, GO, TCL, HASK, PERL, SCALA, BASH, JS, PAS gpc, BF, LISP sbcl, CLOJ, LUA, D, CAML, ASM, FORT, FS, LISP clisp, SCM guile, PERL6, CLPS, WSPC, ERL, ICK, NICE, PRLG, ICON, PIKE, SCM chicken, SCM qobi, ST, NEM

*/

#include <stdio.h>

main()
{
    int testCases, note, sum, count;
	scanf("%d",&testCases);
	
	while(testCases--)
	{
	   scanf("%d",&note);
	   sum= 0;
	   count= 0;
	   
	   if (note >= 100)
	   {
	       while (sum <= note)
	       {
	           sum= sum + 100;
	           count++;
	       }
	       sum= sum - 100;
	       count--;
	   }
	   
	   if (note - sum  >= 50)
	   {
	       sum= sum + 50;
	       count++;
	   }
	   
	   if (note - sum  >= 10)
	   {
	       while (sum <= note)
	       {
	           sum= sum + 10;
	           count++;
	       }
	       sum= sum - 10;
	       count--;
	   }
	   
	   if (note - sum  >= 5)
	   {
	       while (sum <= note)
	       {
	           sum= sum + 5;
	           count++;
	       }
	       sum= sum - 5;
	       count--;
	   }
	   
	   if (note - sum  >= 2)
	   {
	       while (sum <= note)
	       {
	           sum= sum + 2;
	           count++;
	       }
	       sum= sum - 2;
	       count--;
	   }
	   
	   if (note - sum  >= 1)
	   {
	       while (sum <= note)
	       {
	           sum= sum + 1;
	           count++;
	       }
	       sum= sum - 1;
	       count--;
	   }
	   
	   printf("%d\n",count);
	}
}

